#version 330 core

uniform sampler2D textureUnit0;
uniform sampler2D textureUnit1;
uniform sampler2D textureUnit2;

uniform sampler2DShadow depthTexture;
uniform mat4 shadowMatrix[64];

uniform vec3 lightPosition[64];
uniform vec3 lightColor[64];

in vec2 vOutTexCoord0;

void main()
{
	vec4 color = texture2D(textureUnit0, vOutTexCoord0);	
	vec4 position = texture2D(textureUnit1, vOutTexCoord0);	
	vec4 normal = texture2D(textureUnit2, vOutTexCoord0);	


	
	vec3 lightCTotal = vec3(0.0, 0.0, 0.0);
	for (int i=0; i<1; ++i)
	{
		vec3 lightP = lightPosition[i];
		vec3 lightC = lightColor[i];
		vec3 dir = normalize(lightP - position.xyz);
		float rate = max(dot(dir, normal.xyz), 0);
		float f = textureProj(depthTexture, shadowMatrix[i] * position);
		lightCTotal += rate * lightC * f;
	}
	gl_FragColor = vec4(lightCTotal.xyz, 1.0) * color;
}