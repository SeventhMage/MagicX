#version 330 core

uniform vec3 lightPosition[64];
uniform vec3 lightColor[64];

uniform sampler2D textureUnit0;
uniform sampler2D textureUnit1;
uniform sampler2D textureUnit2;



in vec2 vOutTexCoord0;

void main()
{
	vec4 color;// = texture2D(textureUnit0, vOutTexCoord0);	
	vec4 position;// = texture2D(textureUnit1, vOutTexCoord0);	
	vec4 normal;// = texture2D(textureUnit2, vOutTexCoord0);	

	vec3 lightCTotal = vec3(0.0, 0.0, 0.0);
	for (int i=0; i<64; ++i)
	{
		vec3 lightP = lightPosition[i];
		vec3 lightC = lightColor[i];
		vec3 dir = normalize(lightP - position.xyz);
		float rate = max(dot(dir, normal.xyz), 0);
		lightCTotal += rate * lightC;
	}
	gl_FragColor = color * vec4(max(lightCTotal.x, 1.0), max(lightCTotal.y, 1.0), max(lightCTotal.z, 1.0), 1.0);
}