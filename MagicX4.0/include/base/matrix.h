#ifndef _BASE_MATRIX_H_
#define _BASE_MATRIX_H_

#include "vector.h"

//row-major
typedef float matrix22[4];
typedef float matrix33[9];
typedef float matrix44[16];

#define TransformVec2(out, m, in) {\
	out[0] = (m)[0] * (in)[0] + (m)[2] * (in)[1];\
	out[1] = (m)[1] * (in)[0] + (m)[3] * (in)[1];\
}

#define TransformVec3(out, m, in) {\
	out[0] = (m)[0] * (in)[0] + (m)[3] * (in)[1] + (m)[6] * (in)[2];\
	out[1] = (m)[1] * (in)[0] + (m)[4] * (in)[1] + (m)[7] * (in)[2];\
	out[2] = (m)[2] * (in)[0] + (m)[5] * (in)[1] + (m)[8] * (in)[2];\
}

#define TransformVec4(out, m, in) {\
	out[0] = (m)[0] * (in)[0] + (m)[4] * (in)[1] + (m)[8] * (in)[2] + (m)[12] * (in)[3];\
	out[1] = (m)[1] * (in)[0] + (m)[5] * (in)[1] + (m)[9] * (in)[2] + (m)[13] * (in)[3];\
	out[2] = (m)[2] * (in)[0] + (m)[6] * (in)[1] + (m)[10] * (in)[2] + (m)[14] * (in)[3];\
	out[3] = (m)[3] * (in)[0] + (m)[7] * (in)[1] + (m)[11] * (in)[2] + (m)[15] * (in)[3];\
}

#define MatrixMultiply22(o, ml, mr) {\
	o[0] = (ml)[0] * (mr)[0] + (ml)[1] * (mr)[2];\
	o[1] = (ml)[0] * (mr)[1] + (ml)[1] * (mr)[3];\
	o[2] = (ml)[2] * (mr)[0] + (ml)[3] * (mr)[2];\
	o[3] = (ml)[2] * (mr)[1] + (ml)[3] * (mr)[3];\
}

#define MatrixMultiply33(o, ml, mr) {\
	o[0] = (ml)[0] * (mr)[0] + (ml)[1] * (mr)[3] + (ml)[2] * (mr)[6];\
	o[1] = (ml)[0] * (mr)[1] + (ml)[1] * (mr)[4] + (ml)[2] * (mr)[7];\
	o[2] = (ml)[0] * (mr)[2] + (ml)[1] * (mr)[5] + (ml)[2] * (mr)[8];\
	o[3] = (ml)[3] * (mr)[0] + (ml)[4] * (mr)[3] + (ml)[5] * (mr)[6];\
	o[4] = (ml)[3] * (mr)[1] + (ml)[4] * (mr)[4] + (ml)[5] * (mr)[7];\
	o[5] = (ml)[3] * (mr)[2] + (ml)[4] * (mr)[5] + (ml)[5] * (mr)[8];\
	o[6] = (ml)[6] * (mr)[0] + (ml)[7] * (mr)[3] + (ml)[8] * (mr)[6];\
	o[7] = (ml)[6] * (mr)[1] + (ml)[7] * (mr)[4] + (ml)[8] * (mr)[7];\
	o[8] = (ml)[6] * (mr)[2] + (ml)[7] * (mr)[5] + (ml)[8] * (mr)[8];\
}

#define MatrixMultiply44(o, ml, mr) {\
	o[0] = (ml)[0] * (mr)[0] + (ml)[1] * (mr)[4] + (ml)[2] * (mr)[8] + (ml)[3] * (mr)[12];\
	o[1] = (ml)[0] * (mr)[1] + (ml)[1] * (mr)[5] + (ml)[2] * (mr)[9] + (ml)[3] * (mr)[13];\
	o[2] = (ml)[0] * (mr)[2] + (ml)[1] * (mr)[6] + (ml)[2] * (mr)[10] + (ml)[3] * (mr)[14];\
	o[3] = (ml)[0] * (mr)[3] + (ml)[1] * (mr)[7] + (ml)[2] * (mr)[11] + (ml)[3] * (mr)[15];\
	o[4] = (ml)[4] * (mr)[0] + (ml)[5] * (mr)[4] + (ml)[6] * (mr)[8] + (ml)[7] * (mr)[12];\
	o[5] = (ml)[4] * (mr)[1] + (ml)[5] * (mr)[5] + (ml)[6] * (mr)[9] + (ml)[7] * (mr)[13];\
	o[6] = (ml)[4] * (mr)[2] + (ml)[5] * (mr)[6] + (ml)[6] * (mr)[10] + (ml)[7] * (mr)[14];\
	o[7] = (ml)[4] * (mr)[3] + (ml)[5] * (mr)[7] + (ml)[6] * (mr)[11] + (ml)[7] * (mr)[15];\
	o[8] = (ml)[8] * (mr)[0] + (ml)[9] * (mr)[4] + (ml)[10] * (mr)[8] + (ml)[11] * (mr)[12];\
	o[9] = (ml)[8] * (mr)[1] + (ml)[9] * (mr)[5] + (ml)[10] * (mr)[9] + (ml)[11] * (mr)[13];\
	o[10] = (ml)[8] * (mr)[2] + (ml)[9] * (mr)[6] + (ml)[10] * (mr)[10] + (ml)[11] * (mr)[14];\
	o[11] = (ml)[8] * (mr)[3] + (ml)[9] * (mr)[7] + (ml)[10] * (mr)[11] + (ml)[11] * (mr)[15];\
	o[12] = (ml)[12] * (mr)[0] + (ml)[13] * (mr)[4] + (ml)[14] * (mr)[8] + (ml)[15] * (mr)[12];\
	o[13] = (ml)[12] * (mr)[1] + (ml)[13] * (mr)[5] + (ml)[14] * (mr)[9] + (ml)[15] * (mr)[13];\
	o[14] = (ml)[12] * (mr)[2] + (ml)[13] * (mr)[6] + (ml)[14] * (mr)[10] + (ml)[15] * (mr)[14];\
	o[15] = (ml)[12] * (mr)[3] + (ml)[13] * (mr)[7] + (ml)[14] * (mr)[11] + (ml)[15] * (mr)[15];\
}

#endif